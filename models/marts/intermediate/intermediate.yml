version: 2

models:
  - name: order_items
    description: Intermediate model where we calculate item price, discounts and tax. This model is at the order item level.
    tags:
      - output_table_type|orders
    columns:
      - name: order_item_key
        description: '{{ doc("order_item_key") }}'
        data_tests:
          - unique
          - not_null
      - name: order_key
        description: foreign key for orders
      - name: customer_key
        description: foreign key for customers
      - name: part_key
        description: foreign key for part
      - name: supplier_key
        description: foreign key for suppliers
      - name: order_date
        description: date of the order
      - name: order_status_code
        description: status of the order
      - name: return_flag
        description: '{{ doc("return_flag") }}'
      - name: line_number
        description: '{{ doc("line_number") }}'
      - name: order_item_status_code
        description: status of the order item
      - name: ship_date
        description: '{{ doc("ship_date") }}'
      - name: commit_date
        description: '{{ doc("commit_date") }}'
      - name: receipt_date
        description: '{{ doc("receipt_date") }}'
      - name: ship_mode
        description: '{{ doc("ship_mode") }}'
      - name: extended_price
        description: '{{ doc("extended_price") }}'
      - name: quantity
        description: total units
      - name: base_price
        description: '{{ doc("base_price") }}'
      - name: discount_percentage
        description: '{{ doc("discount_percentage") }}'
      - name: discounted_price
        description: '{{ doc("discounted_price") }}'
      - name: gross_item_sales_amount
        description: '{{ doc("gross_item_sales_amount") }}'
      - name: discounted_item_sales_amount
        description: '{{ doc("discounted_item_sales_amount") }}'
      - name: item_discount_amount
        description: '{{ doc("item_discount_amount") }}'
      - name: tax_rate
        description: '{{ doc("tax_rate") }}'
      - name: item_tax_amount
        description: item level tax total
      - name: net_item_sales_amount
        description: '{{ doc("net_item_sales_amount") }}'
  
  - name: part_suppliers
    description: Intermediate model where we join part, supplier and part_supplier. This model is at the part supplier level.
    columns:
      - name: part_supplier_key
        description: primary key of the models
        data_tests:
          - unique
          - not_null
      - name: part_key
        description: foreign key for part
      - name: part_name
        description: name of the part
      - name: manufacturer
        description: manufacturer of the part
      - name: brand
        description: brand of the part
      - name: part_type
        description: type of part including material
      - name: part_size
        description: size of the part
      - name: container
        description: container of the part
      - name: retail_price
        description: '{{ doc("retail_price") }}'
      - name: supplier_key
        description: foreign key for supplier
      - name: supplier_name
        description: '{{ doc("supplier_name") }}'
      - name: supplier_address
        description: '{{ doc("supplier_address") }}'
      - name: phone_number
        description: '{{ doc("phone_number") }}'
      - name: account_balance
        description: '{{ doc("account_balance") }}'
      - name: nation_key
        description: foreign key for nation
      - name: available_quantity
        description: '{{ doc("available_quantity") }}'
      - name: cost
        description: '{{ doc("cost") }}'

  - name: customer_tier
    description: puts customers into tiers (1-4)
    columns:
      - name: customer_key
        data_tests:
          - unique
      - name: lifetime_value
      - name: tier_name
  
unit_tests:
  - name: tiers_are_working
    description: "check if the logic for tiering is working correctly"
    model: customer_tier
    given:
      - input: ref('stg_tpch_customers')
        format: dict
        rows:
          - {customer_key: 629}
          - {customer_key: 4}
          - {customer_key: 1}
          - {customer_key: 26}

      - input: ref('stg_tpch_orders')
        format: dict
        rows:
          - {customer_key: 629, total_price: 163443}
          - {customer_key: 4, total_price: 4134568}
          - {customer_key: 1,  total_price: 1428872}
          - {customer_key: 26, total_price: 418512}

    expect:
      rows:
        - {customer_key: 629,  tier_name: tier1}
        - {customer_key: 4,    tier_name: tier2}
        - {customer_key: 1,    tier_name: tier3}
        - {customer_key: 26,   tier_name: tier4}        
